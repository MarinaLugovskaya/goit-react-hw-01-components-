{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","css","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","el","item","percentage","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,gBCAxKD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,QAAU,8B,gBCAhND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,6BAA6B,MAAQ,0BAA0B,MAAQ,0BAA0B,KAAO,2B,knCCAjLD,EAAOC,QAAU,CAAC,mBAAqB,iD,smECExB,SAASC,EAAT,GAAwD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,MAC5D,OACE,sBAAKC,UAAWC,IAAIC,QAApB,UACE,sBAAKF,UAAWC,IAAIE,YAApB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBL,UAAWC,IAAIH,SAC3D,mBAAGE,UAAWC,IAAIN,KAAlB,SAAyBA,IACzB,mBAAGK,UAAWC,IAAIL,IAAlB,SAAwBA,IACxB,mBAAGI,UAAWC,IAAIJ,SAAlB,SAA6BA,OAG/B,qBAAIG,UAAWC,IAAIF,MAAnB,UACE,+BACE,sBAAMC,UAAWC,IAAIK,MAArB,uBACA,sBAAMN,UAAWC,IAAIM,SAArB,SAAgCR,EAAMS,eAExC,+BACE,sBAAMR,UAAWC,IAAIK,MAArB,mBACA,sBAAMN,UAAWC,IAAIM,SAArB,SAAgCR,EAAMU,WAExC,+BACE,sBAAMT,UAAWC,IAAIK,MAArB,mBACA,sBAAMN,UAAWC,IAAIM,SAArB,SAAgCR,EAAMW,iB,2BCrBjC,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOb,EAAS,EAATA,MAC1C,OACE,0BAASC,UAAWC,IAAIY,WAAxB,UACGD,GAAS,oBAAIZ,UAAWC,IAAIW,MAAnB,SAA2BA,IAEzC,oBAAIZ,UAAWC,IAAIa,SAAnB,SACOf,EAAMgB,KAAI,SAACC,GAAD,OACT,qBAAIhB,UAAWC,IAAIgB,KAAnB,UACE,sBAAMjB,UAAWC,IAAIK,MAArB,SAA6BU,EAAGV,QAChC,uBAAMN,UAAWC,IAAIiB,WAArB,UAAkCF,EAAGE,WAArC,SAF4BF,EAAGG,Y,2BCP5B,SAASC,EAAT,GAAmD,IAA1BtB,EAAyB,EAAzBA,OAAQH,EAAiB,EAAjBA,KAAM0B,EAAW,EAAXA,SACpD,OACE,qBAAIrB,UAAWC,IAAIgB,KAAnB,UACJ,sBAAMjB,UAAWqB,EAAWpB,IAAIqB,OAASrB,IAAIsB,UAC7C,qBAAKvB,UAAWC,IAAIH,OAAQM,IAAKN,EAAQO,IAAI,GAAGmB,MAAM,OACtD,mBAAGxB,UAAWC,IAAIN,KAAlB,SAAyBA,OCJV,SAAS8B,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,oBAAI1B,UAAWC,IAAI0B,WAAnB,SACGD,EAAQX,KAAI,SAACa,GAAD,OACnB,cAACR,EAAD,CAAgCtB,OAAQ8B,EAAO9B,OAAQH,KAAMiC,EAAOjC,KAAM0B,SAAUO,EAAOP,UAAtEO,EAAOT,S,4BCLb,SAASU,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAO9B,UAAWC,IAAI8B,mBAAtB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMf,KAAI,SAACE,GAAD,OACT,+BACE,6BAAKA,EAAKe,OACV,6BAAKf,EAAKgB,SACV,6BAAKhB,EAAKiB,aAHHjB,EAAKE,Y,YCJT,SAASgB,IACtB,OACE,gCACE,cAACzC,EAAD,CACEC,KAAMyC,EAAKzC,KACXC,IAAKwC,EAAKxC,IACVC,SAAUuC,EAAKvC,SACfC,OAAQsC,EAAKtC,OACbC,MAAOqC,EAAKrC,QAEd,cAACY,EAAD,CAAYC,MAAM,eAAeb,MAAOsC,IAR1C,IASE,cAAC1B,EAAD,CAAYZ,MAAOsC,IATrB,IAUE,cAACZ,EAAD,CAAYC,QAASA,IAVvB,IAWE,cAACG,EAAD,CAAoBC,MAAOQ,IAX7B,OCdJ,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06225402.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__g6nXJ\",\"description\":\"Profile_description__2qwl8\",\"avatar\":\"Profile_avatar__9Ovka\",\"stats\":\"Profile_stats__2P_qu\",\"label\":\"Profile_label__UHfAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__cPzT9\",\"friendList\":\"FriendList_friendList__3LiJG\",\"avatar\":\"FriendList_avatar__3yDrR\",\"name\":\"FriendList_name__2PvnP\",\"online\":\"FriendList_online__1IKqm\",\"offline\":\"FriendList_offline__S6pyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1Upix\",\"statList\":\"Statistics_statList___fZhG\",\"title\":\"Statistics_title__1UkEy\",\"label\":\"Statistics_label__1Pagy\",\"item\":\"Statistics_item__2-GjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3Nzyq\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./Profile.module.css\";\r\n\r\nexport default function Profile({name, tag, location, avatar, stats}) {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={css.avatar} />\r\n        <p className={css.name}>{name}</p>\r\n        <p className={css.tag}>{tag}</p>\r\n        <p className={css.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li>\r\n          <span className={css.label}>Followers</span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  folowers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};","import PropTypes from \"prop-types\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n  <ul className={css.statList}>\r\n        {stats.map((el) => (\r\n          <li className={css.item} key={el.id}>\r\n            <span className={css.label}>{el.label}</span>\r\n            <span className={css.percentage}>{el.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n","import css from './FriendList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FriendListItem({avatar, name, isOnline}) {\r\n  return (\r\n    <li className={css.item}>\r\n<span className={isOnline ? css.online : css.offline}></span>\r\n<img className={css.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n<p className={css.name}>{name}</p>\r\n</li>\r\n)\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar:PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  isOnline:PropTypes.bool.isRequired,\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./FriendList.module.css\";\r\nimport FriendListItem from \"./FriendListItem\";\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={css.friendList}>\r\n      {friends.map((friend) => (\r\n<FriendListItem key={friend.id} avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} />\r\n      ))}\r\n      </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n}),\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport css from \"./TransactionHistory.module.css\";\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={css.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import Profile from \"./Profile/Profile\";\r\nimport user from \"./Profile/user.json\";\r\n\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport statisticalData from \"./Statistics/statistical-data.json\";\r\n\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport friends from \"./FriendList/friends.json\";\r\n\r\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\r\nimport transactions from \"./TransactionHistory/transactions.json\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n      <Statistics stats={statisticalData} />;\r\n      <FriendList friends={friends} />,\r\n      <TransactionHistory items={transactions} />;\r\n    </div>\r\n  );\r\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}