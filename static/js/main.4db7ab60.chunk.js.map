{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","stats","className","css","profile","description","src","avatar","alt","name","tag","location","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","el","item","percentage","id","FriendListItem","isOnline","online","offline","ClassName","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,gBCAxKD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,QAAU,8B,4PCAhND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,6BAA6B,MAAQ,0BAA0B,MAAQ,0BAA0B,KAAO,2B,s4BCAjLD,EAAOC,QAAU,CAAC,mBAAqB,iD,smECExB,SAASC,EAAQC,GAC9B,OACE,sBAAKC,UAAWC,IAAIC,QAApB,UACE,sBAAKF,UAAWC,IAAIE,YAApB,UACE,qBAAKC,IAAKL,EAAMM,OAAQC,IAAI,gHAAsBN,UAAWC,IAAII,SACjE,mBAAGL,UAAWC,IAAIM,KAAlB,SAAyBR,EAAMQ,OAC/B,mBAAGP,UAAWC,IAAIO,IAAlB,SAAwBT,EAAMS,MAC9B,mBAAGR,UAAWC,IAAIQ,SAAlB,SAA6BV,EAAMU,cAGrC,qBAAIT,UAAWC,IAAIF,MAAnB,UACE,+BACE,sBAAMC,UAAWC,IAAIS,MAArB,uBACA,sBAAMV,UAAWC,IAAIU,SAArB,SAAgCZ,EAAMa,eAExC,+BACE,sBAAMZ,UAAWC,IAAIS,MAArB,mBACA,sBAAMV,UAAWC,IAAIU,SAArB,SAAgCZ,EAAMc,WAExC,+BACE,sBAAMb,UAAWC,IAAIS,MAArB,mBACA,sBAAMV,UAAWC,IAAIU,SAArB,SAAgCZ,EAAMe,iB,2BCrBjC,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOjB,EAAS,EAATA,MAC1C,OACE,0BAASC,UAAWC,IAAIgB,WAAxB,UACGD,GAAS,oBAAIhB,UAAWC,IAAIe,MAAnB,SAA2BA,IAEzC,oBAAIhB,UAAWC,IAAIiB,SAAnB,SACOnB,EAAMoB,KAAI,SAACC,GAAD,OACT,qBAAIpB,UAAWC,IAAIoB,KAAnB,UACE,sBAAMrB,UAAWC,IAAIS,MAArB,SAA6BU,EAAGV,QAChC,uBAAMV,UAAWC,IAAIqB,WAArB,UAAkCF,EAAGE,WAArC,SAF4BF,EAAGG,Y,2BCP5B,SAASC,EAAT,GAAmD,IAA1BnB,EAAyB,EAAzBA,OAAQE,EAAiB,EAAjBA,KAAMkB,EAAW,EAAXA,SACpD,OACE,qBAAIzB,UAAWC,IAAIoB,KAAnB,UACJ,sBAAMrB,UAAWyB,EAAWxB,IAAIyB,OAASzB,IAAI0B,UAC7C,qBAAKC,UAAW3B,IAAII,OAAQD,IAAKC,EAAQC,IAAI,GAAGuB,MAAM,OACtD,mBAAGD,UAAW3B,IAAIM,KAAlB,SAAyBA,OCJV,SAASuB,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,oBAAI/B,UAAWC,IAAI+B,WAAnB,SACGD,EAAQZ,KAAI,SAACc,GAAD,OACnB,cAACT,EAAD,CAAgCnB,OAAQ4B,EAAO5B,OAAQE,KAAM0B,EAAO1B,KAAMkB,SAAUQ,EAAOR,UAAtEQ,EAAOV,S,4BCLb,SAASW,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAOnC,UAAWC,IAAImC,mBAAtB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMhB,KAAI,SAACE,GAAD,OACT,+BACE,6BAAKA,EAAKgB,OACV,6BAAKhB,EAAKiB,SACV,6BAAKjB,EAAKkB,aAHHlB,EAAKE,Y,YCJT,SAASiB,IACtB,OACE,gCACE,cAAC1C,EAAD,CACES,KAAMkC,EAAKlC,KACXC,IAAKiC,EAAKjC,IACVC,SAAUgC,EAAKhC,SACfJ,OAAQoC,EAAKpC,OACbO,UAAW6B,EAAK1C,MAAMa,UACtBC,MAAO4B,EAAK1C,MAAMc,MAClBC,MAAO2B,EAAK1C,MAAMe,QAEpB,cAACC,EAAD,CAAYC,MAAM,eAAejB,MAAO2C,IAV1C,IAWE,cAAC3B,EAAD,CAAYhB,MAAO2C,IAXrB,IAYE,cAACZ,EAAD,CAAYC,QAASA,IAZvB,IAaE,cAACG,EAAD,CAAoBC,MAAOQ,IAb7B,OCdJ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4db7ab60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__g6nXJ\",\"description\":\"Profile_description__2qwl8\",\"avatar\":\"Profile_avatar__9Ovka\",\"stats\":\"Profile_stats__2P_qu\",\"label\":\"Profile_label__UHfAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__cPzT9\",\"friendList\":\"FriendList_friendList__3LiJG\",\"avatar\":\"FriendList_avatar__3yDrR\",\"name\":\"FriendList_name__2PvnP\",\"online\":\"FriendList_online__1IKqm\",\"offline\":\"FriendList_offline__S6pyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1Upix\",\"statList\":\"Statistics_statList___fZhG\",\"title\":\"Statistics_title__1UkEy\",\"label\":\"Statistics_label__1Pagy\",\"item\":\"Statistics_item__2-GjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3Nzyq\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./Profile.module.css\";\r\n\r\nexport default function Profile(stats) {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img src={stats.avatar} alt=\"Аватар пользователя\" className={css.avatar} />\r\n        <p className={css.name}>{stats.name}</p>\r\n        <p className={css.tag}>{stats.tag}</p>\r\n        <p className={css.location}>{stats.location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li>\r\n          <span className={css.label}>Followers</span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  folowers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};","import PropTypes from \"prop-types\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n  <ul className={css.statList}>\r\n        {stats.map((el) => (\r\n          <li className={css.item} key={el.id}>\r\n            <span className={css.label}>{el.label}</span>\r\n            <span className={css.percentage}>{el.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n","import css from './FriendList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FriendListItem({avatar, name, isOnline}) {\r\n  return (\r\n    <li className={css.item}>\r\n<span className={isOnline ? css.online : css.offline}></span>\r\n<img ClassName={css.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n<p ClassName={css.name}>{name}</p>\r\n</li>\r\n)\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar:PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  isOnline:PropTypes.bool.isRequired,\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./FriendList.module.css\";\r\nimport FriendListItem from \"./FriendListItem\";\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={css.friendList}>\r\n      {friends.map((friend) => (\r\n<FriendListItem key={friend.id} avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} />\r\n      ))}\r\n      </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n}),\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport css from \"./TransactionHistory.module.css\";\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={css.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n","import Profile from \"./Profile/Profile\";\r\nimport user from \"./Profile/user.json\";\r\n\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport statisticalData from \"./Statistics/statistical-data.json\";\r\n\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport friends from \"./FriendList/friends.json\";\r\n\r\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\r\nimport transactions from \"./TransactionHistory/transactions.json\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        followers={user.stats.followers}\r\n        views={user.stats.views}\r\n        likes={user.stats.likes}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n      <Statistics stats={statisticalData} />;\r\n      <FriendList friends={friends} />,\r\n      <TransactionHistory items={transactions} />;\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}